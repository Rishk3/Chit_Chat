[{"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\reportWebVitals.js":"1","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\App.js":"2","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\Header.js":"3","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\FilePicker.js":"4","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\jsLogic\\stringFuncs.js":"5","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\index.js":"6","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\DataCharts.js":"7","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\NumberOfMsgs.js":"8","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\AvgWordsUsedGraph.js":"9","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\MediaGraph.js":"10","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\EmojiGraph.js":"11","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\DayGraph.js":"12","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\MonthGraph.js":"13","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\TimeGraph.js":"14","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\ResponseTimeAvg.js":"15","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\RawData.js":"16","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\jsLogic\\resuable.js":"17","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\FAQ.js":"18"},{"size":362,"mtime":1609200109833,"results":"19","hashOfConfig":"20"},{"size":1144,"mtime":1610339281970,"results":"21","hashOfConfig":"20"},{"size":913,"mtime":1610347957926,"results":"22","hashOfConfig":"20"},{"size":3073,"mtime":1610346836589,"results":"23","hashOfConfig":"20"},{"size":9062,"mtime":1610333251529,"results":"24","hashOfConfig":"20"},{"size":500,"mtime":1609200109833,"results":"25","hashOfConfig":"20"},{"size":1943,"mtime":1610339777431,"results":"26","hashOfConfig":"20"},{"size":1854,"mtime":1610302813860,"results":"27","hashOfConfig":"20"},{"size":2305,"mtime":1610303869752,"results":"28","hashOfConfig":"20"},{"size":2024,"mtime":1610306024273,"results":"29","hashOfConfig":"20"},{"size":1615,"mtime":1610347403338,"results":"30","hashOfConfig":"20"},{"size":1794,"mtime":1610324792518,"results":"31","hashOfConfig":"20"},{"size":1900,"mtime":1610334081285,"results":"32","hashOfConfig":"20"},{"size":2001,"mtime":1610347246226,"results":"33","hashOfConfig":"20"},{"size":2101,"mtime":1610306205528,"results":"34","hashOfConfig":"20"},{"size":145,"mtime":1610339586362,"results":"35","hashOfConfig":"20"},{"size":1374,"mtime":1610331057112,"results":"36","hashOfConfig":"20"},{"size":3150,"mtime":1610345630084,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1103gos",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\reportWebVitals.js",[],["78","79"],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\App.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\Header.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\FilePicker.js",["80","81","82"],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\jsLogic\\stringFuncs.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"// const whatsapp = require('whatsapp-chat-parser');\r\nimport whatsapp from \"whatsapp-chat-parser\";\r\nimport { defaultEmojisGithub } from \"./resuable.js\";\r\n\r\nlet totalmsgsbyUserArrayObj = {};\r\nlet totalmsgsbyUserObj = {};\r\nlet picturesSentObj = {};\r\nlet loveEmojiObj = {};\r\nlet laughEmojiObj = {};\r\nlet mostCommonEmojiObj = {};\r\nlet cmnEmj = {};\r\nlet totalMsgsByDayObj = {};\r\nlet totalMsgsByMonthObj = {};\r\nlet totalMsgsByTIme = {};\r\nlet avgResTimeObj = {};\r\nexport const countTotalMsgs = (contents) => {\r\n  whatsapp\r\n    .parseString(contents)\r\n    .then((messages) => {\r\n      // console.log(messages);\r\n      if (messages[0].author === \"System\") {\r\n        messages.shift();\r\n      }\r\n      let userArray = [];\r\n      let dateArray = [];\r\n\r\n      let actualMsgArray = [];\r\n\r\n      const defaultEmojiArray = [\r\n        \"🙄\",\r\n        \"❤️\",\r\n        \"😎\",\r\n        \"😅\",\r\n        \"😍\",\r\n        \"🥰\",\r\n        \"🙃\",\r\n        \"🤔\",\r\n        \"🤭\",\r\n        \"😋\",\r\n        \"😂\",\r\n        \"😊\",\r\n        \"😘\",\r\n      ];\r\n      let emojiObj = {};\r\n      messages.forEach((mess) => {\r\n        userArray.push(mess.author);\r\n        dateArray.push(mess.date);\r\n        actualMsgArray.push(mess.message);\r\n      });\r\n      let uniqueUserArray = userArray.filter(function (item, pos) {\r\n        return userArray.indexOf(item) === pos;\r\n      });\r\n      //  console.log(\"userArray\", uniqueUserArray);\r\n      const countOccurrences = (arr, val) =>\r\n        arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\r\n      uniqueUserArray.forEach((user) => {\r\n        totalmsgsbyUserArrayObj[user] = countOccurrences(userArray, user);\r\n      });\r\n      //   console.log(\"totalmsgs by user\", totalmsgsbyUserArrayObj);\r\n\r\n      uniqueUserArray.forEach((u) => {\r\n        let msgLength = 0;\r\n        messages.forEach((mess) => {\r\n          if (u === mess.author) {\r\n            let msgg = mess.message.trim();\r\n            msgLength = msgLength + msgg.length;\r\n          }\r\n        });\r\n        totalmsgsbyUserObj[u] = msgLength;\r\n      });\r\n      //  console.log(\"totalLetters used By userrs\", totalmsgsbyUserObj);\r\n\r\n      let embb = {};\r\n      //checking Number of media sent by users\r\n      //  console.log(\"uniqueuserArray\", uniqueUserArray);\r\n      //  console.log(\"MessageArray\", messages);\r\n      uniqueUserArray.forEach((u) => {\r\n        let mediaByuser = 0;\r\n        let emoji1 = 0;\r\n        let emoji2 = 0;\r\n        let emoji3 = 0;\r\n        let emoji4 = 0;\r\n        let emoji5 = 0;\r\n        let emoji6 = 0;\r\n        let emoji7 = 0;\r\n        let emoji8 = 0;\r\n        let emoji9 = 0;\r\n        let emoji10 = 0;\r\n        let emoji11 = 0;\r\n        let emoji12 = 0;\r\n        let emoji13 = 0;\r\n\r\n        messages.forEach((mess) => {\r\n          if (u === mess.author) {\r\n            let msg = mess.message.trim();\r\n            if (msg.includes(\"<Media omitted>\")) {\r\n              mediaByuser++;\r\n            }\r\n            if (msg.includes(\"🙄\")) {\r\n              emoji1++;\r\n            }\r\n            if (msg.includes(\"❤️\")) {\r\n              emoji2++;\r\n            }\r\n            if (msg.includes(\"😎\")) {\r\n              emoji3++;\r\n            }\r\n            if (msg.includes(\"😅\")) {\r\n              emoji4++;\r\n            }\r\n            if (msg.includes(\"😍\")) {\r\n              emoji5++;\r\n            }\r\n            if (msg.includes(\"🥰\")) {\r\n              emoji6++;\r\n            }\r\n            if (msg.includes(\"🙃\")) {\r\n              emoji7++;\r\n            }\r\n            if (msg.includes(\"🤔\")) {\r\n              emoji8++;\r\n            }\r\n            if (msg.includes(\"🤭\")) {\r\n              emoji9++;\r\n            }\r\n            if (msg.includes(\"😋\")) {\r\n              emoji10++;\r\n            }\r\n            if (msg.includes(\"😂\")) {\r\n              emoji11++;\r\n            }\r\n            if (msg.includes(\"😊\")) {\r\n              emoji12++;\r\n            }\r\n            if (msg.includes(\"😘\")) {\r\n              emoji13++;\r\n            }\r\n          }\r\n          picturesSentObj[u] = mediaByuser;\r\n          loveEmojiObj[u] = emoji2;\r\n          laughEmojiObj[u] = emoji11;\r\n        });\r\n      });\r\n      //  console.log(\"heart emoji\", loveEmojiObj);\r\n      // console.log(\"pictureobj\", picturesSentObj);\r\n\r\n      //checkimng emoji\r\n\r\n      defaultEmojisGithub.forEach((emoji) => {\r\n        let countOfEach = 0;\r\n        messages.forEach((msg) => {\r\n          if (msg.message.includes(emoji)) {\r\n            countOfEach++;\r\n          }\r\n        });\r\n        mostCommonEmojiObj[emoji] = countOfEach;\r\n      });\r\n\r\n      const entries = Object.entries(mostCommonEmojiObj);\r\n\r\n      let maxCommonEmoji = 0;\r\n      let emp = 0;\r\n      const pp = entries.map((entry, index) => {\r\n        if (entry[1] > maxCommonEmoji) {\r\n          maxCommonEmoji = entry[1];\r\n          emp = entry[0];\r\n        }\r\n      });\r\n\r\n      cmnEmj[emp] = maxCommonEmoji;\r\n\r\n      defaultEmojiArray.forEach((emoji) => {\r\n        let emojicount = 0;\r\n        messages.forEach((mess) => {\r\n          let msg = mess.message.trim();\r\n          if (msg.includes(emoji)) {\r\n            emojicount++;\r\n          }\r\n        });\r\n        emojiObj[emoji] = emojicount;\r\n      });\r\n\r\n      //  console.log(\"emojiObj\", emojiObj);\r\n\r\n      //Date Manipulations\r\n      let weekDaysArray = [];\r\n      let monthsArray = [];\r\n      let timeArray = [];\r\n\r\n      const DaysInWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n      const monthsInYear = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ];\r\n      const timeInADay = [\r\n        \"00\",\r\n        \"01\",\r\n        \"02\",\r\n        \"03\",\r\n        \"04\",\r\n        \"05\",\r\n        \"06\",\r\n        \"07\",\r\n        \"08\",\r\n        \"09\",\r\n        \"10\",\r\n        \"11\",\r\n        \"12\",\r\n        \"13\",\r\n        \"14\",\r\n        \"15\",\r\n        \"16\",\r\n        \"17\",\r\n        \"18\",\r\n        \"19\",\r\n        \"20\",\r\n        \"21\",\r\n        \"22\",\r\n        \"23\",\r\n      ];\r\n\r\n      dateArray.forEach((date) => {\r\n        date = date.toString();\r\n        let dateSplit = date.split(\" \");\r\n        weekDaysArray.push(dateSplit[0]);\r\n        monthsArray.push(dateSplit[1]);\r\n        timeArray.push(dateSplit[4]);\r\n      });\r\n\r\n      let timeDigitArray = [];\r\n      timeArray.forEach((time) => {\r\n        let timeSplit = time.split(\":\");\r\n        timeDigitArray.push(timeSplit[0]);\r\n      });\r\n\r\n      DaysInWeek.forEach((day) => {\r\n        totalMsgsByDayObj[day] = countOccurrences(weekDaysArray, day);\r\n      });\r\n      monthsInYear.forEach((month) => {\r\n        totalMsgsByMonthObj[month] = countOccurrences(monthsArray, month);\r\n      });\r\n      timeInADay.forEach((time) => {\r\n        totalMsgsByTIme[time] = countOccurrences(timeDigitArray, time);\r\n      });\r\n\r\n      // console.log(\"msgs in a day obj\", totalMsgsByDayObj);\r\n      // console.log(\"msgs in a month obj\", totalMsgsByMonthObj);\r\n      //  console.log(\"msgs in a time obj\", totalMsgsByTIme);\r\n\r\n      //  console.log(\"original msg araay\", messages);\r\n      let newUnixMsgArray = messages.map(\r\n        (mess) =>\r\n          mess.date !== null\r\n            ? { ...mess, date: new Date(mess.date).getTime() / 1000 }\r\n            : mess\r\n        // console.log(new Date(mess.date).getTime() / 1000);\r\n      );\r\n\r\n      //sorting by unixTime is necessary or NOt???\r\n      // newUnixMsgArray.sort((a, b) => {\r\n      //   return a.date - b.date;\r\n      // });\r\n      // console.log(\"Unixmsg Array\", newUnixMsgArray);\r\n      uniqueUserArray.forEach((user) => {\r\n        let totalrestime = 0;\r\n        let counter = 0;\r\n        for (let i = 0; i < newUnixMsgArray.length - 1; i++) {\r\n          if (\r\n            newUnixMsgArray[i].author !== newUnixMsgArray[i + 1].author &&\r\n            newUnixMsgArray[i + 1].author === user\r\n          ) {\r\n            // checking if user responding within 1000s\r\n            if (\r\n              Math.abs(newUnixMsgArray[i + 1].date - newUnixMsgArray[i].date) <\r\n              3000\r\n            ) {\r\n              totalrestime =\r\n                totalrestime +\r\n                Math.abs(newUnixMsgArray[i + 1].date - newUnixMsgArray[i].date);\r\n              counter++;\r\n            }\r\n          }\r\n        }\r\n        avgResTimeObj[user] = totalrestime / counter;\r\n      });\r\n      // console.log(\"Avg Response time in seconds\", avgResTimeObj);\r\n\r\n      //logic for calculating response time of user\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const totalMsgByEachUser = totalmsgsbyUserArrayObj;\r\nexport const totalLettersUsedObj = totalmsgsbyUserObj;\r\nexport const totalMediaSentObj = picturesSentObj;\r\nexport const totalLoveEmojiSentObj = loveEmojiObj;\r\nexport const totalLaughEmojiSentObj = laughEmojiObj;\r\nexport const totalMsgsInDayObj = totalMsgsByDayObj;\r\nexport const totalMsgsInMonthObj = totalMsgsByMonthObj;\r\nexport const totalMsgsByTimeObj = totalMsgsByTIme;\r\nexport const totalavgResTimeObj = avgResTimeObj;\r\nexport const commonEmojiObj = cmnEmj;\r\n",["97","98"],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\index.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\DataCharts.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\NumberOfMsgs.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\AvgWordsUsedGraph.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\MediaGraph.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\EmojiGraph.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\DayGraph.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\MonthGraph.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\TimeGraph.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\ResponseTimeAvg.js",[],["99","100"],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\RawData.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\jsLogic\\resuable.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\FAQ.js",["101","102","103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":20},{"ruleId":"109","severity":1,"message":"114","line":29,"column":11,"nodeType":"111","messageId":"112","endLine":29,"endColumn":20},{"ruleId":"109","severity":1,"message":"115","line":73,"column":11,"nodeType":"111","messageId":"112","endLine":73,"endColumn":15},{"ruleId":"109","severity":1,"message":"116","line":100,"column":15,"nodeType":"111","messageId":"112","endLine":100,"endColumn":21},{"ruleId":"109","severity":1,"message":"117","line":106,"column":15,"nodeType":"111","messageId":"112","endLine":106,"endColumn":21},{"ruleId":"109","severity":1,"message":"118","line":109,"column":15,"nodeType":"111","messageId":"112","endLine":109,"endColumn":21},{"ruleId":"109","severity":1,"message":"119","line":112,"column":15,"nodeType":"111","messageId":"112","endLine":112,"endColumn":21},{"ruleId":"109","severity":1,"message":"120","line":115,"column":15,"nodeType":"111","messageId":"112","endLine":115,"endColumn":21},{"ruleId":"109","severity":1,"message":"121","line":118,"column":15,"nodeType":"111","messageId":"112","endLine":118,"endColumn":21},{"ruleId":"109","severity":1,"message":"122","line":121,"column":15,"nodeType":"111","messageId":"112","endLine":121,"endColumn":21},{"ruleId":"109","severity":1,"message":"123","line":124,"column":15,"nodeType":"111","messageId":"112","endLine":124,"endColumn":21},{"ruleId":"109","severity":1,"message":"124","line":127,"column":15,"nodeType":"111","messageId":"112","endLine":127,"endColumn":22},{"ruleId":"109","severity":1,"message":"125","line":133,"column":15,"nodeType":"111","messageId":"112","endLine":133,"endColumn":22},{"ruleId":"109","severity":1,"message":"126","line":136,"column":15,"nodeType":"111","messageId":"112","endLine":136,"endColumn":22},{"ruleId":"109","severity":1,"message":"127","line":163,"column":13,"nodeType":"111","messageId":"112","endLine":163,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":163,"column":45,"nodeType":"130","messageId":"131","endLine":163,"endColumn":47},{"ruleId":"105","replacedBy":"132"},{"ruleId":"107","replacedBy":"133"},{"ruleId":"105","replacedBy":"134"},{"ruleId":"107","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":10,"column":13,"nodeType":"138","endLine":13,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":29,"column":13,"nodeType":"138","endLine":32,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":43,"column":13,"nodeType":"138","endLine":46,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":60,"column":13,"nodeType":"138","endLine":63,"endColumn":14},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'WhatsAppIcon' is defined but never used.","'totalmsgs' is assigned a value but never used.","'embb' is assigned a value but never used.","'emoji1' is assigned a value but never used.","'emoji3' is assigned a value but never used.","'emoji4' is assigned a value but never used.","'emoji5' is assigned a value but never used.","'emoji6' is assigned a value but never used.","'emoji7' is assigned a value but never used.","'emoji8' is assigned a value but never used.","'emoji9' is assigned a value but never used.","'emoji10' is assigned a value but never used.","'emoji12' is assigned a value but never used.","'emoji13' is assigned a value but never used.","'pp' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["139"],["140"],["139"],["140"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]