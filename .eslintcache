[{"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\reportWebVitals.js":"1","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\App.js":"2","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\Header.js":"3","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\FilePicker.js":"4","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\jsLogic\\stringFuncs.js":"5","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\index.js":"6","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\DataCharts.js":"7","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\NumberOfMsgs.js":"8","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\AvgWordsUsedGraph.js":"9","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\MediaGraph.js":"10","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\EmojiGraph.js":"11","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\DayGraph.js":"12","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\MonthGraph.js":"13","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\TimeGraph.js":"14","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\ResponseTimeAvg.js":"15","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\RawData.js":"16"},{"size":362,"mtime":1609200109833,"results":"17","hashOfConfig":"18"},{"size":379,"mtime":1610275727600,"results":"19","hashOfConfig":"18"},{"size":434,"mtime":1609845751032,"results":"20","hashOfConfig":"18"},{"size":3733,"mtime":1610275724993,"results":"21","hashOfConfig":"18"},{"size":8191,"mtime":1610256663353,"results":"22","hashOfConfig":"18"},{"size":500,"mtime":1609200109833,"results":"23","hashOfConfig":"18"},{"size":1163,"mtime":1610281712550,"results":"24","hashOfConfig":"18"},{"size":2076,"mtime":1610275836799,"results":"25","hashOfConfig":"18"},{"size":935,"mtime":1609838954193,"results":"26","hashOfConfig":"18"},{"size":693,"mtime":1609840579158,"results":"27","hashOfConfig":"18"},{"size":640,"mtime":1609841509084,"results":"28","hashOfConfig":"18"},{"size":637,"mtime":1609841482938,"results":"29","hashOfConfig":"18"},{"size":657,"mtime":1609841801058,"results":"30","hashOfConfig":"18"},{"size":655,"mtime":1609842079058,"results":"31","hashOfConfig":"18"},{"size":838,"mtime":1609845953506,"results":"32","hashOfConfig":"18"},{"size":116,"mtime":1609822906921,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1103gos",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\reportWebVitals.js",[],["71","72"],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\App.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\Header.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\FilePicker.js",["73"],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\jsLogic\\stringFuncs.js",["74","75","76","77","78","79","80","81","82","83","84","85","86"],"// const whatsapp = require('whatsapp-chat-parser');\r\nimport whatsapp from \"whatsapp-chat-parser\";\r\nlet totalmsgsbyUserArrayObj = {};\r\nlet totalmsgsbyUserObj = {};\r\nlet picturesSentObj = {};\r\nlet loveEmojiObj = {};\r\nlet totalMsgsByDayObj = {};\r\nlet totalMsgsByMonthObj = {};\r\nlet totalMsgsByTIme = {};\r\nlet avgResTimeObj = {};\r\nexport const countTotalMsgs = (contents) => {\r\n  whatsapp\r\n    .parseString(contents)\r\n    .then((messages) => {\r\n      // console.log(messages);\r\n      if (messages[0].author === \"System\") {\r\n        messages.shift();\r\n      }\r\n      let userArray = [];\r\n      let dateArray = [];\r\n\r\n      let actualMsgArray = [];\r\n\r\n      const defaultEmojiArray = [\r\n        \"🙄\",\r\n        \"❤️\",\r\n        \"😎\",\r\n        \"😅\",\r\n        \"😍\",\r\n        \"🥰\",\r\n        \"🙃\",\r\n        \"🤔\",\r\n        \"🤭\",\r\n        \"😋\",\r\n        \"😂\",\r\n        \"😊\",\r\n        \"😘\",\r\n      ];\r\n      let emojiObj = {};\r\n      messages.forEach((mess) => {\r\n        userArray.push(mess.author);\r\n        dateArray.push(mess.date);\r\n        actualMsgArray.push(mess.message);\r\n      });\r\n      let uniqueUserArray = userArray.filter(function (item, pos) {\r\n        return userArray.indexOf(item) === pos;\r\n      });\r\n      //  console.log(\"userArray\", uniqueUserArray);\r\n      const countOccurrences = (arr, val) =>\r\n        arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\r\n      uniqueUserArray.forEach((user) => {\r\n        totalmsgsbyUserArrayObj[user] = countOccurrences(userArray, user);\r\n      });\r\n      //   console.log(\"totalmsgs by user\", totalmsgsbyUserArrayObj);\r\n\r\n      uniqueUserArray.forEach((u) => {\r\n        let msgLength = 0;\r\n        messages.forEach((mess) => {\r\n          if (u === mess.author) {\r\n            let msgg = mess.message.trim();\r\n            msgLength = msgLength + msgg.length;\r\n          }\r\n        });\r\n        totalmsgsbyUserObj[u] = msgLength;\r\n      });\r\n      //  console.log(\"totalLetters used By userrs\", totalmsgsbyUserObj);\r\n\r\n      let embb = {};\r\n      //checking Number of media sent by users\r\n      //  console.log(\"uniqueuserArray\", uniqueUserArray);\r\n      //  console.log(\"MessageArray\", messages);\r\n      uniqueUserArray.forEach((u) => {\r\n        let mediaByuser = 0;\r\n        let emoji1 = 0;\r\n        let emoji2 = 0;\r\n        let emoji3 = 0;\r\n        let emoji4 = 0;\r\n        let emoji5 = 0;\r\n        let emoji6 = 0;\r\n        let emoji7 = 0;\r\n        let emoji8 = 0;\r\n        let emoji9 = 0;\r\n        let emoji10 = 0;\r\n        let emoji11 = 0;\r\n        let emoji12 = 0;\r\n        let emoji13 = 0;\r\n\r\n        messages.forEach((mess) => {\r\n          if (u === mess.author) {\r\n            let msg = mess.message.trim();\r\n            if (msg.includes(\"<Media omitted>\")) {\r\n              mediaByuser++;\r\n            }\r\n            if (msg.includes(\"🙄\")) {\r\n              emoji1++;\r\n            }\r\n            if (msg.includes(\"❤️\")) {\r\n              emoji2++;\r\n            }\r\n            if (msg.includes(\"😎\")) {\r\n              emoji3++;\r\n            }\r\n            if (msg.includes(\"😅\")) {\r\n              emoji4++;\r\n            }\r\n            if (msg.includes(\"😍\")) {\r\n              emoji5++;\r\n            }\r\n            if (msg.includes(\"🥰\")) {\r\n              emoji6++;\r\n            }\r\n            if (msg.includes(\"🙃\")) {\r\n              emoji7++;\r\n            }\r\n            if (msg.includes(\"🤔\")) {\r\n              emoji8++;\r\n            }\r\n            if (msg.includes(\"🤭\")) {\r\n              emoji9++;\r\n            }\r\n            if (msg.includes(\"😋\")) {\r\n              emoji10++;\r\n            }\r\n            if (msg.includes(\"😂\")) {\r\n              emoji11++;\r\n            }\r\n            if (msg.includes(\"😊\")) {\r\n              emoji12++;\r\n            }\r\n            if (msg.includes(\"😘\")) {\r\n              emoji13++;\r\n            }\r\n          }\r\n          picturesSentObj[u] = mediaByuser;\r\n          loveEmojiObj[u] = emoji2;\r\n        });\r\n      });\r\n      //  console.log(\"heart emoji\", loveEmojiObj);\r\n      // console.log(\"pictureobj\", picturesSentObj);\r\n\r\n      //checkimng emoji\r\n\r\n      defaultEmojiArray.forEach((emoji) => {\r\n        let emojicount = 0;\r\n        messages.forEach((mess) => {\r\n          let msg = mess.message.trim();\r\n          if (msg.includes(emoji)) {\r\n            emojicount++;\r\n          }\r\n        });\r\n        emojiObj[emoji] = emojicount;\r\n      });\r\n\r\n      //  console.log(\"emojiObj\", emojiObj);\r\n\r\n      //Date Manipulations\r\n      let weekDaysArray = [];\r\n      let monthsArray = [];\r\n      let timeArray = [];\r\n\r\n      const DaysInWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n      const monthsInYear = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ];\r\n      const timeInADay = [\r\n        \"00\",\r\n        \"01\",\r\n        \"02\",\r\n        \"03\",\r\n        \"04\",\r\n        \"05\",\r\n        \"06\",\r\n        \"07\",\r\n        \"08\",\r\n        \"09\",\r\n        \"10\",\r\n        \"11\",\r\n        \"12\",\r\n        \"13\",\r\n        \"14\",\r\n        \"15\",\r\n        \"16\",\r\n        \"17\",\r\n        \"18\",\r\n        \"19\",\r\n        \"20\",\r\n        \"21\",\r\n        \"22\",\r\n        \"23\",\r\n      ];\r\n\r\n      dateArray.forEach((date) => {\r\n        date = date.toString();\r\n        let dateSplit = date.split(\" \");\r\n        weekDaysArray.push(dateSplit[0]);\r\n        monthsArray.push(dateSplit[1]);\r\n        timeArray.push(dateSplit[4]);\r\n      });\r\n\r\n      let timeDigitArray = [];\r\n      timeArray.forEach((time) => {\r\n        let timeSplit = time.split(\":\");\r\n        timeDigitArray.push(timeSplit[0]);\r\n      });\r\n\r\n      DaysInWeek.forEach((day) => {\r\n        totalMsgsByDayObj[day] = countOccurrences(weekDaysArray, day);\r\n      });\r\n      monthsInYear.forEach((month) => {\r\n        totalMsgsByMonthObj[month] = countOccurrences(monthsArray, month);\r\n      });\r\n      timeInADay.forEach((time) => {\r\n        totalMsgsByTIme[time] = countOccurrences(timeDigitArray, time);\r\n      });\r\n\r\n      // console.log(\"msgs in a day obj\", totalMsgsByDayObj);\r\n      // console.log(\"msgs in a month obj\", totalMsgsByMonthObj);\r\n      //  console.log(\"msgs in a time obj\", totalMsgsByTIme);\r\n\r\n      //  console.log(\"original msg araay\", messages);\r\n      let newUnixMsgArray = messages.map(\r\n        (mess) =>\r\n          mess.date !== null\r\n            ? { ...mess, date: new Date(mess.date).getTime() / 1000 }\r\n            : mess\r\n        // console.log(new Date(mess.date).getTime() / 1000);\r\n      );\r\n\r\n      //sorting by unixTime is necessary or NOt???\r\n      // newUnixMsgArray.sort((a, b) => {\r\n      //   return a.date - b.date;\r\n      // });\r\n      // console.log(\"Unixmsg Array\", newUnixMsgArray);\r\n      uniqueUserArray.forEach((user) => {\r\n        let totalrestime = 0;\r\n        let counter = 0;\r\n        for (let i = 0; i < newUnixMsgArray.length - 1; i++) {\r\n          if (\r\n            newUnixMsgArray[i].author !== newUnixMsgArray[i + 1].author &&\r\n            newUnixMsgArray[i + 1].author === user\r\n          ) {\r\n            // checking if user responding within 1000s\r\n            if (\r\n              Math.abs(newUnixMsgArray[i + 1].date - newUnixMsgArray[i].date) <\r\n              3000\r\n            ) {\r\n              totalrestime =\r\n                totalrestime +\r\n                Math.abs(newUnixMsgArray[i + 1].date - newUnixMsgArray[i].date);\r\n              counter++;\r\n            }\r\n          }\r\n        }\r\n        avgResTimeObj[user] = totalrestime / counter;\r\n      });\r\n      // console.log(\"Avg Response time in seconds\", avgResTimeObj);\r\n\r\n      //logic for calculating response time of user\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const totalMsgByEachUser = totalmsgsbyUserArrayObj;\r\nexport const totalLettersUsedObj = totalmsgsbyUserObj;\r\nexport const totalMediaSentObj = picturesSentObj;\r\nexport const totalLoveEmojiSentObj = loveEmojiObj;\r\nexport const totalMsgsInDayObj = totalMsgsByDayObj;\r\nexport const totalMsgsInMonthObj = totalMsgsByMonthObj;\r\nexport const totalMsgsByTimeObj = totalMsgsByTIme;\r\nexport const totalavgResTimeObj = avgResTimeObj;\r\n","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\index.js",[],["87","88"],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\DataCharts.js",["89","90","91","92","93","94","95","96"],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\NumberOfMsgs.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\AvgWordsUsedGraph.js",["97"],"import React, { useState, useEffect } from \"react\";\r\nimport { totalLettersUsedObj, totalMsgByEachUser } from \"./jsLogic/stringFuncs\";\r\nfunction AvgWordsUsedGraph() {\r\n  const [totalmsgArray, setTotalmsgArray] = useState([]);\r\n  const totalMsgByUser = Object.entries(totalMsgByEachUser);\r\n  const mapUserCount = totalMsgByUser.map((user) => user[1]);\r\n\r\n  useEffect(() => {\r\n    const entries = Object.entries(totalLettersUsedObj);\r\n    setTotalmsgArray(entries);\r\n  }, []);\r\n  let i = 0;\r\n  const userMsgData = totalmsgArray.map((entry) => {\r\n    return (\r\n      <p key={entry[0]}>\r\n        Avg Letters used By {entry[0]} per message is{\" \"}\r\n        {Math.floor(entry[1] / mapUserCount[i])} *(including Spaces)\r\n      </p>\r\n    );\r\n    i++;\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: \"20px\" }}>\r\n      <h2>avg Letters used By each user Per Msg</h2>\r\n      {userMsgData}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AvgWordsUsedGraph;\r\n","C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\MediaGraph.js",[],["98","99"],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\EmojiGraph.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\DayGraph.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\MonthGraph.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\TimeGraph.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\ResponseTimeAvg.js",[],"C:\\Users\\ancha\\OneDrive\\Documents\\React_projects\\Chit_Charts\\client\\src\\RawData.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":28,"column":11,"nodeType":"106","messageId":"107","endLine":28,"endColumn":20},{"ruleId":"104","severity":1,"message":"108","line":68,"column":11,"nodeType":"106","messageId":"107","endLine":68,"endColumn":15},{"ruleId":"104","severity":1,"message":"109","line":95,"column":15,"nodeType":"106","messageId":"107","endLine":95,"endColumn":21},{"ruleId":"104","severity":1,"message":"110","line":101,"column":15,"nodeType":"106","messageId":"107","endLine":101,"endColumn":21},{"ruleId":"104","severity":1,"message":"111","line":104,"column":15,"nodeType":"106","messageId":"107","endLine":104,"endColumn":21},{"ruleId":"104","severity":1,"message":"112","line":107,"column":15,"nodeType":"106","messageId":"107","endLine":107,"endColumn":21},{"ruleId":"104","severity":1,"message":"113","line":110,"column":15,"nodeType":"106","messageId":"107","endLine":110,"endColumn":21},{"ruleId":"104","severity":1,"message":"114","line":113,"column":15,"nodeType":"106","messageId":"107","endLine":113,"endColumn":21},{"ruleId":"104","severity":1,"message":"115","line":116,"column":15,"nodeType":"106","messageId":"107","endLine":116,"endColumn":21},{"ruleId":"104","severity":1,"message":"116","line":119,"column":15,"nodeType":"106","messageId":"107","endLine":119,"endColumn":21},{"ruleId":"104","severity":1,"message":"117","line":122,"column":15,"nodeType":"106","messageId":"107","endLine":122,"endColumn":22},{"ruleId":"104","severity":1,"message":"118","line":125,"column":15,"nodeType":"106","messageId":"107","endLine":125,"endColumn":22},{"ruleId":"104","severity":1,"message":"119","line":128,"column":15,"nodeType":"106","messageId":"107","endLine":128,"endColumn":22},{"ruleId":"104","severity":1,"message":"120","line":131,"column":15,"nodeType":"106","messageId":"107","endLine":131,"endColumn":22},{"ruleId":"100","replacedBy":"121"},{"ruleId":"102","replacedBy":"122"},{"ruleId":"104","severity":1,"message":"123","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":16},{"ruleId":"104","severity":1,"message":"124","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":18},{"ruleId":"104","severity":1,"message":"125","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":18},{"ruleId":"104","severity":1,"message":"126","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":18},{"ruleId":"104","severity":1,"message":"127","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":15},{"ruleId":"104","severity":1,"message":"128","line":9,"column":8,"nodeType":"106","messageId":"107","endLine":9,"endColumn":23},{"ruleId":"104","severity":1,"message":"129","line":10,"column":8,"nodeType":"106","messageId":"107","endLine":10,"endColumn":17},{"ruleId":"104","severity":1,"message":"130","line":12,"column":10,"nodeType":"106","messageId":"107","endLine":12,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":20,"column":5,"nodeType":"133","messageId":"134","endLine":20,"endColumn":9},{"ruleId":"100","replacedBy":"135"},{"ruleId":"102","replacedBy":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'totalmsgs' is assigned a value but never used.","Identifier","unusedVar","'embb' is assigned a value but never used.","'emoji1' is assigned a value but never used.","'emoji3' is assigned a value but never used.","'emoji4' is assigned a value but never used.","'emoji5' is assigned a value but never used.","'emoji6' is assigned a value but never used.","'emoji7' is assigned a value but never used.","'emoji8' is assigned a value but never used.","'emoji9' is assigned a value but never used.","'emoji10' is assigned a value but never used.","'emoji11' is assigned a value but never used.","'emoji12' is assigned a value but never used.","'emoji13' is assigned a value but never used.",["137"],["138"],"'DayGraph' is defined but never used.","'EmojiGraph' is defined but never used.","'MediaGraph' is defined but never used.","'MonthGraph' is defined but never used.","'RawData' is defined but never used.","'ResponseTimeAvg' is defined but never used.","'TimeGraph' is defined but never used.","'Paper' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["137"],["138"],"no-global-assign","no-unsafe-negation"]